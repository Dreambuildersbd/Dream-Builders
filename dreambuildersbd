import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { motion } from "framer-motion";

const products = [
  { id: 1, name: "Wireless Earbuds", category: "Electronics", price: 29, "https://via.placeholder.com/300x200?text=Earbuds": "/products/earbuds.jpg" },
  { id: 2, name: "Smartwatch", category: "Electronics", price: 49, "https://via.placeholder.com/300x200?text=Earbuds": "/products/smartwatch.jpg" },
  { id: 3, name: "Blender", category: "Home Appliances", price: 35, "https://via.placeholder.com/300x200?text=Earbuds": "/products/blender.jpg" },
  { id: 4, name: "Sneakers", category: "Fashion", price: 59, "https://via.placeholder.com/300x200?text=Earbuds": "/products/sneakers.jpg" },
  { id: 5, name: "Leather Wallet", category: "Accessories", price: 19, "https://via.placeholder.com/300x200?text=Earbuds": "/products/wallet.jpg" },
];

export default function DreamBuilders() {
  const [search, setSearch] = useState("");
  const [filter, setFilter] = useState("All");
  const [cart, setCart] = useState([]);

  const addToCart = (product) => {
    setCart((prevCart) => [...prevCart, product]);
  };

  const filteredProducts = products.filter((product) => {
    const matchesSearch = product.name.toLowerCase().includes(search.toLowerCase());
    const matchesFilter = filter === "All" || product.category === filter;
    return matchesSearch && matchesFilter;
  });

  const categories = ["All", ...new Set(products.map((product) => product.category))];

  const checkout = () => {
    alert("Redirecting to payment gateway (bKash / Card)\n(Note: Integration in progress!)");
    // Placeholder for actual payment integration (bKash / SSLCommerz / Stripe)
  };

  return (
    <div className="p-6 space-y-6">
      <motion.h1 className="text-4xl font-bold text-center" initial={{ opacity: 0 }} animate={{ opacity: 1 }}>Dream Builders</motion.h1>
      <p className="text-center text-gray-500">Your trusted shop for all kinds of products</p>

      {/* Search and Filter */}
      <div className="flex flex-col md:flex-row gap-4 justify-center items-center">
        <Input 
          placeholder="Search products..." 
          value={search} 
          onChange={(e) => setSearch(e.target.value)} 
          className="w-full md:w-1/3"
        />
        <select 
          value={filter} 
          onChange={(e) => setFilter(e.target.value)} 
          className="border rounded p-2 w-full md:w-1/4"
        >
          {categories.map((category) => (
            <option key={category} value={category}>{category}</option>
          ))}
        </select>
      </div>

      {/* Products Grid */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {filteredProducts.map((product) => (
          <motion.div 
            key={product.id} 
            whileHover={{ scale: 1.05 }}
          >
            <Card className="rounded-2xl shadow-md">
              <img src={product.image} alt={product.name} className="rounded-t-2xl w-full h-48 object-cover" />
              <CardContent className="space-y-2 p-4">
                <h2 className="text-xl font-semibold">{product.name}</h2>
                <p className="text-gray-500">Category: {product.category}</p>
                <p className="text-lg font-bold">${product.price}</p>
                <Button className="w-full" onClick={() => addToCart(product)}>Add to Cart</Button>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </div>

      {/* Cart Summary */}
      <div className="p-4 border rounded-2xl shadow-md">
        <h2 className="text-2xl font-bold mb-4">Cart Summary</h2>
        {cart.length === 0 ? (
          <p className="text-gray-500">Your cart is empty.</p>
        ) : (
          <div className="space-y-2">
            {cart.map((item, index) => (
              <div key={index} className="flex justify-between">
                <span>{item.name}</span>
                <span>${item.price}</span>
              </div>
            ))}
            <hr className="my-2" />
            <div className="flex justify-between font-bold">
              <span>Total</span>
              <span>${cart.reduce((acc, item) => acc + item.price, 0)}</span>
            </div>
            <Button className="w-full mt-2" onClick={checkout}>Proceed to Payment</Button>
          </div>
        )}
      </div>
    </div>
  );
}
